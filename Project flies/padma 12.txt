# butterfy_app.py

import gradio as gr
import tensorflow as tf
from tensorflow.keras.models import load_model
import numpy as np
from tensorflow.keras.preprocessing import image

# Load your pre-trained model
model = load_model('butterfly_classifier.h5')  # or .keras format

# Load class label names
# Assume classLabel1.csv exists with a column "ClassLabel"
import pandas as pd
df_labels = pd.read_csv('classLabel1.csv')
class_labels = df_labels['ClassLabel'].tolist()

def predict_butterfly(img):
    """Preprocess image, run model, and return topâ€‘3 predictions."""
    img = img.resize((224, 224))
    arr = image.img_to_array(img) / 255.0
    arr = np.expand_dims(arr, axis=0)
    preds = model.predict(arr)[0]
    top_idx = preds.argsort()[-3:][::-1]
    return {class_labels[i]: float(preds[i]) for i in top_idx}

# Build Gradio Interface
iface = gr.Interface(
    fn=predict_butterfly,
    inputs=gr.Image(type="pil"),
    outputs=gr.Label(num_top_classes=3),
    title="ðŸ¦‹ Butterfly Species Classifier",
    description="Upload a butterfly image to get the top 3 predicted species.",
)

if __name__ == "__main__":
    iface.launch()
tensorflow
gradio
pandas
